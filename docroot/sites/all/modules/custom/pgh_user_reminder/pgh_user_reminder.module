<?php

/**
 * @file
 * User reminder module.
 *
 * @author Fang Jin <fang@designhammer.com>
 */


/**
 * Implementation of hook_menu().
 */
function pgh_user_reminder_menu() {
  $items = array();

  $items['remind'] = array(
    'title' => 'Remind Users',
    'description' => 'Remind users in the Business Unit',
    'page callback' => 'pgh_user_reminder_page',
    'access callback' => TRUE,
    // 'access callback' => 'user_access',
    // 'access arguments' => array('invite users business unit'),
  );

  return $items;
}

/**
 * Page callback for the user remind page.
 *
 * @return string
 *   Page content.
 *
 * @author Fang Jin <fang@designhammer.com>
 */
function pgh_user_reminder_page() {
  if (isset($_GET['bid'])) {
    $business_unit = node_load($_GET['bid']);

    if (!$business_unit) {
      return MENU_NOT_FOUND;
    }

    if (!entity_access('update', 'node', $business_unit)) {
      return MENU_ACCESS_DENIED;
    }

    drupal_set_title('Send email to users in ' . $business_unit->title);

    return drupal_get_form('pgh_user_reminder_form', $business_unit);
  }
  if (isset($_GET['wid'])) {
    $workgroup = node_load($_GET['wid']);

    if (!$workgroup) {
      return MENU_NOT_FOUND;
    }

    if (!entity_access('update', 'node', $workgroup)) {
      return MENU_ACCESS_DENIED;
    }

    drupal_set_title('Send email to users in ' . $workgroup->title);

    return drupal_get_form('pgh_user_reminder_workgroup_form', $workgroup);
  }

  return MENU_NOT_FOUND;
}

/**
 * Form callback for the user reminder form.
 *
 * @param array $form
 *   Form array.
 *
 * @param array $form_state
 *   Form state array.
 *
 * @return array
 *   Business unit node.
 *
 * @author Fang Jin <fang@designhammer.com>
 */
function pgh_user_reminder_form($form, &$form_state, $business_unit) {
  $form = array();

  $form['owner'] = array(
    '#type' => 'hidden',
    '#value' => $business_unit->nid,
  );

  // Get all users in this business unit.
  $options = array();
  $users = array();
  $bwrapper = entity_metadata_wrapper('node', $business_unit);
  foreach ($bwrapper->field_users->getIterator() as $wrapper) {
    $id = $wrapper->getIdentifier();
    $username = $wrapper->name->value();
    $name = $wrapper->field_user_first_name->value() . ' ' . $wrapper->field_user_last_name->value();
    $mail = $wrapper->mail->value();
    $options[$id] = $name . "($mail)";
    $users[$id] = $wrapper->value();
  }

  $form['users'] = array(
    '#type' => 'checkboxes',
    '#options' => $options,
    '#default_value' => array_keys($options),
    '#title' => 'Business unit users',
    '#description' => 'Select all users that you want to send reminder emails to.'
  );
  $form['users_info'] = array(
    '#type' => 'hidden',
    '#value' => serialize($users),
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#description' => 'Email title',
  );

  $form['body'] = array(
    '#type' => 'textarea',
    '#description' => 'Email body',
    '#default_value' => '',
    '#rows' => 3,
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send reminders'),
  );

  return $form;
}

/**
 * Reminder page submit.
 *
 * @param array $form
 *   Form array.
 *
 * @param array $form_state
 *   Form state array.
 *
 * @author Fang Jin <fang@designhammer.com>
 */
function pgh_user_reminder_form_submit($form, &$form_state) {
  // dsm($form_state['values']);
  $users = unserialize($form_state['values']['users_info']);
  // dsm($form_state['values']['users']);

  foreach ($form_state['values']['users'] as $uid => $value) {
    if ($value) {
      $user = $users[$uid];
      drupal_mail('pgh_user_reminder',
        'remind',
        $user->mail,
        language_default(),
        array(
          'account' => $user,
          'body' => $form_state['values']['body']
        )
      );
    }
  }
}

/**
 * Form callback for the user reminder form for workgroup.
 *
 * @param array $form
 *   Form array.
 *
 * @param array $form_state
 *   Form state array.
 *
 * @return array
 *   Business unit node.
 *
 * @author Fang Jin <fang@designhammer.com>
 */
function pgh_user_reminder_workgroup_form($form, &$form_state, $workgroup) {
  $form = array();

  $form['workgroup'] = array(
    '#type' => 'hidden',
    '#value' => serialize($workgroup),
  );

  // Get all business units in this workgroup.
  $users = array();
  $wwrapper = entity_metadata_wrapper('node', $workgroup);
  foreach ($wwrapper->field_business_units->getIterator() as $bwrapper) {
    // Get all users in this business unit.
    $options = array();
    foreach ($bwrapper->field_users->getIterator() as $wrapper) {
      $id = $wrapper->getIdentifier();
      $username = $wrapper->name->value();
      $name = $wrapper->field_user_first_name->value() . ' ' . $wrapper->field_user_last_name->value();
      $mail = $wrapper->mail->value();
      $options[$id] = $name . "($mail)";
      $users[$id] = $wrapper->value();
    }
    $form['users'][$bwrapper->getIdentifier()] = array(
      '#type' => 'checkboxes',
      '#options' => $options,
      '#default_value' => array_keys($options),
      '#title' => 'Users in ' . $bwrapper->title->value(),
      // '#description' => 'Select all users that you want to send reminder emails to this business unit'
    );
  }

  $form['users_info'] = array(
    '#type' => 'hidden',
    '#value' => serialize($users),
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#description' => 'Email title',
  );

  $form['body'] = array(
    '#type' => 'textarea',
    '#description' => 'Email body',
    '#default_value' => '',
    '#rows' => 3,
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send reminders'),
  );

  return $form;
}

/**
 * Reminder page submit.
 *
 * @param array $form
 *   Form array.
 *
 * @param array $form_state
 *   Form state array.
 *
 * @author Fang Jin <fang@designhammer.com>
 */
function pgh_user_reminder_workgroup_form_submit($form, &$form_state) {
  // dsm($form_state['values']);
  $users = unserialize($form_state['values']['users_info']);

  $users_sent = array();
  foreach ($form_state['values'] as $key => $options) {
    // For each options list.
    if (is_numeric($key)) {
      foreach ($options as $uid => $value) {
        if ($value && empty($users_sent[$uid])) {
          $user = $users[$uid];
          drupal_mail('pgh_user_reminder',
            'remind',
            $user->mail,
            language_default(),
            array(
              'workgroup' => unserialize($form_state['values']['workgroup']),
              'account' => $user,
              'body' => $form_state['values']['body']
            )
          );
          $users_sent[$uid] = 1;
        }
      }
    }
  }
}

/**
 * Implements hook_mail().
 *
 * @author Fang Jin <fang@designhammer.com>
 */
function pgh_user_reminder_mail($key, &$message, $params) {
  $message['subject'] = t('Reminder from Practice Greenhealth');
  $message['body'][] = t($params['body']);
}
